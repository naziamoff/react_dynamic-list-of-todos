{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["API_URL","getTodo","id","fetch","then","response","json","TodoList","onUserSelect","selectedUserId","useState","todos","setTodos","visibleTodos","setVisibleTodos","filterBy","setFilterBy","query","setQuery","appliedQuery","setAppliedQuery","filterTodos","filter","todo","completed","useEffect","findTodo","length","foundTodos","title","toLowerCase","includes","applyQuery","useCallback","debounce","a","onStatusChange","status","url","data","method","headers","body","JSON","stringify","oldTodoIndex","findIndex","newTodo","newTodos","splice","className","type","placeholder","value","onChange","target","onClick","name","map","classNames","checked","userId","CurrentUser","onUnselect","selectedUser","setSelectedUser","fetchUser","String","email","phone","App","setSelectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e37364e.chunk.js","sourcesContent":["import { Todo, User } from './types';\n\nconst API_URL = 'https://mate.academy/students-api';\n\nexport function getTodos(): Promise<Todo[]> {\n  return fetch(`${API_URL}/todos`)\n    .then(response => response.json());\n}\n\nexport function getUser(id: number): Promise<User> {\n  return fetch(`${API_URL}/users/${String(id)}`)\n    .then(response => response.json());\n}\n\nexport function getTodo(id: number) {\n  return fetch(`${API_URL}/todos/${id}`)\n    .then(response => response.json());\n}\n\nexport function patch(url: string, data: Pick<Todo, 'completed'>) {\n  return fetch(API_URL + url, {\n    method: 'PATCH',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  })\n    .then(response => response.json());\n}\n","import React, {\n  useState, useEffect, useCallback,\n} from 'react';\nimport { debounce } from 'lodash';\nimport classNames from 'classnames';\nimport { Todo, TodoListProps } from '../../types';\nimport './TodoList.scss';\nimport { getTodos, getTodo, patch } from '../../api';\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  onUserSelect, selectedUserId,\n}) => {\n  const [todos, setTodos] = useState<null | Todo[]>();\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [filterBy, setFilterBy] = useState('all');\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  const filterTodos = () => {\n    switch (filterBy) {\n      case 'not-completed':\n        return todos?.filter(todo => !todo.completed) || null;\n      case 'completed':\n        return todos?.filter(todo => todo.completed) || null;\n      default:\n        return todos;\n    }\n  };\n\n  useEffect(() => {\n    setVisibleTodos(filterTodos());\n    setQuery('');\n  }, [filterBy]);\n\n  const findTodo = () => {\n    if (!appliedQuery.length) {\n      setVisibleTodos(filterTodos());\n\n      return;\n    }\n\n    const foundTodos = filterTodos()\n      ?.filter(todo => todo.title.toLowerCase()\n        .includes(appliedQuery.toLowerCase()));\n\n    setVisibleTodos(foundTodos || null);\n  };\n\n  const applyQuery = useCallback(\n    debounce(setAppliedQuery, 500),\n    [],\n  );\n\n  useEffect(() => {\n    findTodo();\n  }, [appliedQuery]);\n\n  useEffect(() => {\n    (async () => {\n      setTodos(await getTodos());\n    })();\n  }, []);\n\n  useEffect(() => {\n    setVisibleTodos(filterTodos());\n    if (appliedQuery) {\n      findTodo();\n    }\n  }, [todos]);\n\n  const onStatusChange = async (id: number, status: boolean) => {\n    await patch(`/todos/${id}`, { completed: !status });\n    if (todos) {\n      const oldTodoIndex = todos.findIndex(todo => todo.id === id);\n      const newTodo = await getTodo(id);\n\n      const newTodos = [...todos];\n\n      newTodos.splice(oldTodoIndex, 1, newTodo);\n\n      setTodos(newTodos);\n    }\n  };\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n      <div className=\"filter-container\">\n        <div className=\"searchbar\">\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            data-cy=\"filterByTitle\"\n            value={query}\n            onChange={({ target }) => {\n              setQuery(target.value);\n              applyQuery(target.value);\n              findTodo();\n            }}\n          />\n          <button\n            type=\"button\"\n            onClick={() => {\n              setQuery('');\n              setAppliedQuery('');\n            }}\n          >\n            X\n          </button>\n        </div>\n        <select\n          name=\"status\"\n          value={filterBy}\n          onChange={({ target }) => setFilterBy(target.value)}\n        >\n          <option value=\"all\">\n            All\n          </option>\n          <option value=\"not-completed\">\n            Not completed\n          </option>\n          <option value=\"completed\">\n            Completed\n          </option>\n        </select>\n      </div>\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\" data-cy=\"listOfTodos\">\n          {visibleTodos && (\n            visibleTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item', {\n                  'TodoList__item--checked': todo.completed,\n                  'TodoList__item--unchecked': !todo.completed,\n                })}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    onChange={() => onStatusChange(todo.id, !!todo.completed)}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n                <button\n                  data-cy=\"userButton\"\n                  className={classNames('TodoList__user-button button', {\n                    // eslint-disable-next-line max-len\n                    'TodoList__user-button--selected': selectedUserId === todo.userId,\n                  })}\n                  type=\"button\"\n                  onClick={() => onUserSelect(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { User, CurrentUserProps } from '../../types';\nimport { getUser } from '../../api';\nimport './CurrentUser.scss';\n\n// eslint-disable-next-line max-len\nexport const CurrentUser: React.FC<CurrentUserProps> = ({ userId, onUnselect }) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      setSelectedUser(await getUser(userId));\n    };\n\n    try {\n      fetchUser();\n    } catch {\n      setSelectedUser(null);\n    }\n  }, [userId]);\n\n  return selectedUser && (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>\n          Selected user:\n          {userId}\n        </span>\n\n      </h2>\n\n      <h3 className=\"CurrentUser__name\" data-cy=\"userName\">\n        {selectedUser?.name}\n      </h3>\n      <p className=\"CurrentUser__email\">{selectedUser?.email}</p>\n      <p className=\"CurrentUser__phone\">{selectedUser?.phone}</p>\n      <button\n        type=\"button\"\n        className=\"CurrentUser__clear\"\n        onClick={() => onUnselect(0)}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nconst App: React.FC = () => {\n  const [\n    selectedUserId,\n    setSelectedUserId,\n  ] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          selectedUserId={selectedUserId}\n          onUserSelect={setSelectedUserId}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              userId={selectedUserId}\n              onUnselect={setSelectedUserId}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}