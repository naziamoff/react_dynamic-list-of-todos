{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["API_URL","getTodos","fetch","then","response","json","TodoList","todos","onUserSelect","useState","visibleTodos","setVisibleTodos","filteredTodos","setFilteredTodos","filterBy","setFilterBy","query","setQuery","appliedQuery","setAppliedQuery","findTodo","length","foundTodos","filter","todo","title","includes","toLowerCase","applyQuery","useCallback","debounce","useEffect","a","todosByFilter","completed","filterTodos","className","type","placeholder","value","onChange","target","name","map","classNames","onClick","userId","id","CurrentUser","onUnselect","selectedUser","setSelectedUser","fetchUser","String","email","phone","App","setTodos","selectedUserId","setSelectedUserId","fetchTodos","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5bf35de0.chunk.js","sourcesContent":["import { Todo, User } from './types';\n\nconst API_URL = 'https://mate.academy/students-api';\n\nexport function getTodos(): Promise<Todo[]> {\n  return fetch(`${API_URL}/todos`)\n    .then(response => response.json());\n}\n\nexport function getUser(id: number): Promise<User> {\n  return fetch(`${API_URL}/users/${String(id)}`)\n    .then(response => response.json());\n}\n","import React, {\n  useState, useEffect, useCallback,\n} from 'react';\nimport { debounce } from 'lodash';\nimport classNames from 'classnames';\nimport { TodoListProps } from '../../types';\nimport './TodoList.scss';\nimport { getTodos } from '../../api';\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos, onUserSelect }) => {\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [filteredTodos, setFilteredTodos] = useState(todos);\n  const [filterBy, setFilterBy] = useState('all');\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  const filterTodos = () => {\n    let todosByFilter = todos;\n\n    switch (filterBy) {\n      case 'not-completed':\n        todosByFilter = todos?.filter(todo => !todo.completed) || null;\n        break;\n      case 'completed':\n        todosByFilter = todos?.filter(todo => todo.completed) || null;\n        break;\n      default:\n        break;\n    }\n\n    setFilteredTodos(todosByFilter);\n    setVisibleTodos(todosByFilter);\n    setQuery('');\n  };\n\n  const findTodo = () => {\n    if (!appliedQuery.length) {\n      return;\n    }\n\n    const foundTodos = filteredTodos\n      ?.filter(todo => todo.title.includes(appliedQuery.toLowerCase()));\n\n    setVisibleTodos(foundTodos || null);\n  };\n\n  const applyQuery = useCallback(\n    debounce(setAppliedQuery, 500),\n    [],\n  );\n\n  useEffect(() => {\n    findTodo();\n  }, [appliedQuery]);\n\n  useEffect(() => {\n    (async () => {\n      setFilteredTodos(await getTodos());\n      setVisibleTodos(await getTodos());\n    })();\n  }, []);\n\n  useEffect(() => {\n    filterTodos();\n  }, [filterBy]);\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        data-cy=\"filterByTitle\"\n        value={query}\n        onChange={({ target }) => {\n          setQuery(target.value);\n          applyQuery(target.value);\n          findTodo();\n        }}\n      />\n      <select\n        name=\"status\"\n        value={filterBy}\n        onChange={({ target }) => setFilterBy(target.value)}\n      >\n        <option value=\"all\">\n          All\n        </option>\n        <option value=\"not-completed\">\n          Not completed\n        </option>\n        <option value=\"completed\">\n          Completed\n        </option>\n      </select>\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\" data-cy=\"listOfTodos\">\n          {visibleTodos && (\n            visibleTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item', {\n                  'TodoList__item--checked': todo.completed,\n                  'TodoList__item--unchecked': !todo.completed,\n                })}\n              >\n                <label>\n                  <input type=\"checkbox\" />\n                  <p>{todo.title}</p>\n                </label>\n                <button\n                  data-cy=\"userButton\"\n                  className=\"TodoList__user-button button\"\n                  type=\"button\"\n                  onClick={() => onUserSelect(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { User, CurrentUserProps } from '../../types';\nimport { getUser } from '../../api';\nimport './CurrentUser.scss';\n\n// eslint-disable-next-line max-len\nexport const CurrentUser: React.FC<CurrentUserProps> = ({ userId, onUnselect }) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      setSelectedUser(await getUser(userId));\n    };\n\n    try {\n      fetchUser();\n    } catch {\n      setSelectedUser(null);\n    }\n  }, [userId]);\n\n  return selectedUser && (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>\n          Selected user:\n          {userId}\n        </span>\n\n      </h2>\n\n      <h3 className=\"CurrentUser__name\" data-cy=\"userName\">\n        {selectedUser?.name}\n      </h3>\n      <p className=\"CurrentUser__email\">{selectedUser?.email}</p>\n      <p className=\"CurrentUser__phone\">{selectedUser?.phone}</p>\n      <button\n        type=\"button\"\n        className=\"CurrentUser__clear\"\n        onClick={() => onUnselect(0)}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\nimport { Todo } from './types';\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | null>(null);\n  const [\n    selectedUserId,\n    setSelectedUserId,\n  ] = useState(0);\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      setTodos(await getTodos());\n    };\n\n    try {\n      fetchTodos();\n    } catch (error) {\n      setTodos(null);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todos}\n          onUserSelect={setSelectedUserId}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              userId={selectedUserId}\n              onUnselect={setSelectedUserId}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}